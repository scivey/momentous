// Generated by CoffeeScript 1.6.3
(function() {
  var flatSplat, manipulators, partial2, path, reverse2, _, _ref;

  path = require("path");

  _ref = require(path.join(__dirname, "util.js")), reverse2 = _ref.reverse2, partial2 = _ref.partial2, flatSplat = _ref.flatSplat;

  _ = require("underscore");

  manipulators = (function() {
    var add, addBy, addByers, adders, sub, subBy, subByers, subbers, _outs, _unpartialedAdders, _unpartialedSubtracters;
    _outs = {};
    _unpartialedAdders = {
      years: function(targetMoment, years) {
        return targetMoment.clone().add("y", years);
      },
      days: function(targetMoment, days) {
        return targetMoment.clone().add("d", days);
      },
      months: function(targetMoment, months) {
        return targetMoment.clone().add("M", months);
      },
      hours: function(targetMoment, hours) {
        return targetMoment.clone().add("h", hours);
      },
      minutes: function(targetMoment, minutes) {
        return targetMoment.clone().add("m", minutes);
      },
      seconds: function(targetMoment, seconds) {
        return targetMoment.clone().add("s", seconds);
      },
      milliseconds: function(targetMoment, millisecs) {
        return targetMoment.clone().add('ms', millisecs);
      },
      lit: function(targetMoment, objectLiteral) {
        return targetMoment.clone().add(objectLiteral);
      }
    };
    adders = (function() {
      var _partialed;
      _partialed = {};
      _.each(_.pairs(_unpartialedAdders), function(onePair) {
        return _partialed[onePair[0]] = partial2(onePair[1]);
      });
      return _partialed;
    })();
    addByers = (function() {
      var _reversed;
      _reversed = {};
      _.each(_.pairs(_unpartialedAdders), function(onePair) {
        return _reversed[onePair[0]] = partial2(reverse2(onePair[1]));
      });
      return _reversed;
    })();
    add = adders.lit;
    _.extend(add, adders);
    addBy = addByers.lit;
    _.extend(addBy, addByers);
    _outs.add = add;
    _outs.addBy = addBy;
    _unpartialedSubtracters = {
      years: function(targetMoment, years) {
        return targetMoment.clone().subtract("y", years);
      },
      days: function(targetMoment, days) {
        return targetMoment.clone().subtract("d", days);
      },
      months: function(targetMoment, months) {
        return targetMoment.clone().subtract("M", months);
      },
      hours: function(targetMoment, hours) {
        return targetMoment.clone().subtract("h", hours);
      },
      minutes: function(targetMoment, minutes) {
        return targetMoment.clone().subtract("m", minutes);
      },
      seconds: function(targetMoment, seconds) {
        return targetMoment.clone().subtract("s", seconds);
      },
      milliseconds: function(targetMoment, millisecs) {
        return targetMoment.clone().subtract('ms', millisecs);
      },
      lit: function(targetMoment, objectLiteral) {
        return targetMoment.clone().subtract(objectLiteral);
      }
    };
    subbers = (function() {
      var _partialed;
      _partialed = {};
      _.each(_.pairs(_unpartialedSubtracters), function(onePair) {
        return _partialed[onePair[0]] = partial2(onePair[1]);
      });
      return _partialed;
    })();
    subByers = (function() {
      var _reversed;
      _reversed = {};
      _.each(_.pairs(_unpartialedSubtracters), function(onePair) {
        return _reversed[onePair[0]] = partial2(reverse2(onePair[1]));
      });
      return _reversed;
    })();
    sub = subbers.lit;
    subBy = subByers.lit;
    _.extend(sub, subbers);
    _.extend(subBy, subByers);
    _outs.sub = sub;
    _outs.subBy = subBy;
    return _outs;
  })();

  module.exports = manipulators;

}).call(this);
