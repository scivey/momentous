// Generated by CoffeeScript 1.6.3
(function() {
  var flatSplat, misc, partial2, path, reverse2, _, _ref,
    __slice = [].slice;

  path = require("path");

  _ref = require(path.join(__dirname, "util.js")), reverse2 = _ref.reverse2, partial2 = _ref.partial2, flatSplat = _ref.flatSplat;

  _ = require("underscore");

  misc = (function() {
    var absDiff, clone, diff, invoke, invokeOnClone, outs;
    invoke = function() {
      var aMoment, methodName, params;
      methodName = arguments[0], aMoment = arguments[1], params = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
      if (_.size(params) === 1 && _.isArray(params[0])) {
        params = params[0];
      }
      return aMoment[methodName].apply(aMoment, params);
    };
    invokeOnClone = function() {
      var aMoment, methodName, params;
      methodName = arguments[0], aMoment = arguments[1], params = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
      if (_.size(params) === 1 && _.isArray(params[0])) {
        params = params[0];
      }
      return aMoment.clone()[aMethodName].apply(aMoment, params);
    };
    clone = function(aMoment) {
      return aMoment.clone();
    };
    diff = function(moment1, moment2) {
      return moment1.diff(moment2);
    };
    absDiff = function(moment1, moment2) {
      var _diff;
      _diff = moment1.diff(moment2);
      return Math.abs(_diff);
    };
    return outs = {
      absDiff: absDiff,
      clone: clone,
      diff: diff,
      invoke: invoke,
      invokeOnClone: invokeOnClone
    };
  })();

  module.exports = misc;

}).call(this);
